---
version: "3.7"

networks:
    default:

volumes:
    postgres_data:
    firebase_data:

services:
    newsletter-assignment:
        container_name: newsletter-assignment
        init: true
        build:
            context: .
            target: development
            args:
                PROJECT_ROOT: "/go/src/newsletter-assignment"
        restart: unless-stopped
        depends_on:
            postgres:
                condition: service_healthy
        environment:
            CONFIG_HTTP_PORT: 8080
            CONFIG_APP_ENV: dev
            CONFIG_APP_NAME: newsletter-assignment
            CONFIG_JWT_SECRET: ${CONFIG_JWT_SECRET}
            CONFIG_CORS_ALLOWED_ORIGINS: http://localhost
            CONFIG_CORS_ALLOWED_HEADERS: authorization;content-type
            CONFIG_TIMEZONE: Europe/Prague

            # Firebase
            CONFIG_FIREBASE_USE_EMULATOR: "true"
            CONFIG_FIREBASE_EMULATOR_HOST: "firebase-emulator:9000/?ns=strv-go-newsletter-javor-jiri"
            CONFIG_FIREBASE_DATABASE_URL: "https://strv-go-newsletter-javor-jiri.firebaseio.io"
            CONFIG_FIREBASE_SERVICE_ACCOUNT_FILE_PATH: "/go/src/newsletter-assignment/service-account.json"

            # Sendgrid
            CONFIG_SENDGRID_API_KEY: ${CONFIG_SENDGRID_API_KEY}
            CONFIG_SENDGRID_TEMPLATE_ID: ${CONFIG_SENDGRID_TEMPLATE_ID}
            CONFIG_SEND_MAIL: "false"

            # Logger
            CONFIG_LOG_LEVEL: debug
            CONFIG_LOG_DEVEL_MODE: 1

            # Postgres
            CONFIG_POSTGRES_USER: newsletter-assignment
            CONFIG_POSTGRES_PASSWORD: pwd
            CONFIG_POSTGRES_DB: newsletter-assignment
            CONFIG_POSTGRES_HOST: postgres
            CONFIG_POSTGRES_PORT: 5432
            CONFIG_POSTGRES_POOL_HEALTH_CHECK_PERIOD: 5s

        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:8080/api/health/readiness || exit 1"]
            interval: 15s
            timeout: 10s
            retries: 3
        ports:
            - "8080:8080"
        volumes:
            - ".:/go/src/newsletter-assignment/:cached"

    postgres:
        container_name: postgres
        image: "postgres:16-alpine"
        restart: unless-stopped
        environment:
            POSTGRES_DB: newsletter-assignment
            POSTGRES_USER: newsletter-assignment
            POSTGRES_PASSWORD: pwd
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - postgres_data:/var/lib/postgresql/data/pgdata
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U newsletter-assignment -d newsletter-assignment"]
            interval: 10s
            timeout: 5s
            retries: 5

    firebase-emulator:
        image: andreysenov/firebase-tools
        container_name: firebase-emulator
        ports:
            - "9000:9000"  # Realtime Database
            - "9099:9099"  # Auth
            - "4000:4000"  # Firebase Emulator UI
        volumes:
            - ./firebase.json:/home/node/firebase.json
            - ./database.rules.json:/home/node/database.rules.json
            - firebase_data:/home/node/data
        command: firebase emulators:start --project strv-go-newsletter-javor-jiri
